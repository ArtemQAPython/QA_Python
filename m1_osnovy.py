# Вывод на экран
#Задание 1
#Тебе нужно вывести на экран статус: «Автотесты запущены».

print('Автотесты запущены')

#Задание 2
#Тесты запустились: теперь нужно рассказать, как проходит процесс тестирования.
#После строки print('Автотесты запущены') добавь новую строку кода, которая напечатает текст 1 тест завершён со статусом PASSED. Это значит, один тест успешно пройден.
print('Автотесты запущены')
print('1 тест завершён со статусом PASSED')


#Пробелы в выводе на экран
#Задание 2
#Напиши аргумент функции print так, чтобы программа вывела «Пусть удача всегда будет с вами». Используй переменные.
luck = 'удача'
always = 'всегда'
print('Пусть', luck, always, 'будет с вами')


#Переменные
#Задание 1
#Напечатай два сообщения: «Открыть браузер» и «Ввести логин в поле Имя пользователя».
#В скобках используй переменные. Не изменяй их значения.
browser = 'браузер'
login = 'логин'
print('Открыть', browser)
print('Ввести', login, 'в поле Имя пользователя')

#Задание 2
#Выведи информацию об окружении, в котором проходит тестирование. Используй одно сообщение: в нём будет несколько переменных.
#Должно получиться вот так: «Окружение: Яндекс.Браузер 800x600».
environment = 'Окружение:'
browser = 'Яндекс.Браузер'
resolution = '800x600'
print(environment, browser, resolution)

#Задание 3
#Леонардо Ди Каприо впервые получил «Оскар» в номинации «Лучший актёр» за роль в фильме «Выживший». Присвой название фильма переменной и выведи на экран.
# присвойте значение переменной вместо многоточий
movie_title = 'Выживший'

# выведите название фильма на экран
print(movie_title)

#Задание 4
#Выведи название теста. Вместо многоточий подставь строки «Заголовок:» и «Авторизация пользователя» в переменные header и name соответственно.
#Не пропусти двоеточие: на проверке задания это будет учитываться.
# Объявите строки в переменных вместо многоточий
header = 'Заголовок:'
name = 'Авторизация пользователя'
print(header)
print(name)


#Как называть переменные
#Задание 3
#Выбери правильные названия переменных для okno и pole и переименуй их.
#Присвой им соответствующие значения, чтобы вывести "Откройте окно браузера и введите значение в поле поиска."
#Окно по-английски — window. Поле по-английски — field.
# Переименуй переменные правильно
window = 'окно'
field = 'поле'
print('Откройте', window, 'браузера и введите значение в', field, 'поиска.')

#Константы
#Задание 2
#Создай константу BASE_URL и присвой ей значение 'https://practicum.yandex.ru'. Напечатай значение константы.
#напиши код вместо многоточия
BASE_URL = 'https://practicum.yandex.ru'


#Типы данных: числа и строки
#Задание 3
#Автотесты запускаются ежедневно. Иногда нужно собрать статистику по их запуску.
#В переменных autotests_completed_yesterday и autotests_completed_today записано, сколько тестов выполнено вчера и сегодня.
#Вычисли сумму тестов за два дня и сохрани результат в переменную autotests_completed_sum. Программа напечатает результат.
autotests_completed_yesterday = 425
autotests_completed_today = 100

# Вычисли сумму здесь: вместо многоточия напиши выражение,
# суммирующее количество шагов за два дня
autotests_completed_sum = autotests_completed_yesterday + autotests_completed_today

print('Сколько автотестов выполнено за два дня?')
print(autotests_completed_sum)


#Операции с целыми числами
#Задание 1
#Первая серия сериала «Теория большого взрыва» вышла на экраны 24 сентября 2007 года. А через 12 лет выпустили финальную серию. Выведи в консоль, что это был за год.
first_episode = 2007
years_later = 12
final_episode =  first_episode + years_later# сложи значения переменных
print(final_episode)

#Задание 3
#Игорь очень продуктивно провёл выходные. Он успел посмотреть пять полных футбольных матчей и ещё два матча по одному тайму. Всего матч длится 90 минут, а один тайм — 45 минут.
#Выведи в консоль, сколько всего часов Игорь потратил на просмотр. Вычисления делай сразу внутри команды print().
print((6 * 90) // 60) # сделай расчёты здесь

#Задание 4
#Дано число 894. Выясни, вторая цифра в нём чётная или нечётная. Для этого:
#Выдели вторую цифру в числе 894 с помощью операторов % и //. Найди остаток от деления числа на 100, а результат раздели на 10. Сохрани цифру в переменную second;
#С помощью оператора % определи чётность числа second. Результат сразу выведи на экран.
number = 894

# определи вторую цифру в числе number с помощью операций % и //
second = (number % 100) // 10

# определи чётность second и выведи результат операции
print(second % 2)


#Конкатенация строк
#Задание 3
#Выведи на экран информацию о статусе тест-кейса. Должно получиться: Тест-кейс «Авторизация» завершён со статусом PASSED. В выводе используй переменные.
#Будь аккуратнее с кавычками и пробелами. Обрати внимание, что слово «Авторизация» должно напечататься с кавычками-ёлочками.
name = 'Авторизация'
status = 'PASSED'

# допиши команду
print('Тест-кейс «' + name + '»' + ' завершён со статусом ' + status)


#Форматирование строк
#Задание
#Перепиши задание из урока про конкатенацию: на этот раз используй f-string.
#Выведи на экран информацию о статусе тест-кейса. Должно получиться: «Тест-кейс "Авторизация" завершён со статусом PASSED». В выводе используй переменные.
#Аккуратнее с кавычками: обрати внимание, что слово Авторизация в выводе должно быть в кавычках "".
name = 'Авторизация'
status = 'PASSED'

# допиши команду
print(f'Тест-кейс "{name}" завершён со статусом {status}')

#Преобразование типов
#Задание 1
#Печенье стоит 50 рублей, а конфеты — 190. Посчитай общую стоимость товаров.
biscuit = 50
candies = '190'
sum = biscuit + int(candies)
print(sum)

#Задание 2
#Итак, печенье и конфеты стоят 240 рублей. Выведи это на экран.
#Используй f-strings или конкатенацию. Не забудь учесть расстановку пробелов.
total = 240
text = 'Сумма покупки составляет '
rubles = ' рублей'
print(f'{text}{total}{rubles}') # Напиши код здесь

#Задание 3
#Выведи на экран строку 'Завершено 5 тестов'. Составь её из:
#строки 'Завершено ',
#значения переменной count,
#строки ' тестов'.
count = 5
message = 'Завершено ' + str(count) + ' тестов'  # Допиши код здесь
print(message)

#Задание 4
#Теперь нужно посчитать, сколько тестов были выполнены успешно и сколько — упали. А ещё нужно выводить более подробную информацию про них.
#На вход даны переменные passed и failed.
passed = 3
failed = '2'
count = int(passed) + int(failed) # Здесь нужно подсчитать общее количество выполненных тестов
message_result = 'Завершено ' + str(count) + ' тестов'  # Здесь используй переменную count
message_details = 'Успешно выполнено: ' + str(passed) + ', упало в ошибку: ' + failed # Здесь используй переменные passed и failed
print(message_result)
print(message_details)


#Дробные числа
#Задание 1
#Скорость света равна 299792458 метров в секунду. Переведи её в километры в час. На основе переменной speed_ms (скорость света в м/с) вычисли значение переменной speed_kmh (скорость света в км/ч).
#Значение переменной speed_kmh приведи к целому типу: отбрось дробную часть.
speed_ms = 299792458
speed_kmh = int(speed_ms * 3600 / 1000)
print('Скорость света равна', speed_kmh, 'км/ч')

#Задание 2
#Расстояние от Солнца до Земли — примерно 150 миллионов километров. Сколько секунд потребуется солнечному свету, чтобы достигнуть поверхности земли? Скорость света, как мы уже знаем, равна 299792458 метров в секунду.
speed_ms = 299792458
distance_km = '150000000'
time_s = int(int(distance_km) * 1000 / speed_ms)
print('Солнечный свет достигнет Земли за', time_s, 'секунд')

#Задание 3
#Длина Питона из известного мультфильма равна 38 попугаев и одно попугайское крылышко. Будем считать, что крылышко равно 0,2 попугая.
#В проход пассажирского железнодорожного вагона можно поставить в ряд 248 попугаев. Посчитай, сколько Питонов поместится в этот проход.
#Питоны бывают только целые, это важно. Поэтому переменная result должна быть типа int.
snake = '38.2'
parrots = 248
result = int(parrots / float(snake)) #допиши тут код — всё одной строчкой
print('В вагоне можно положить в ряд', result, 'питонов')











































